(()=>{"use strict";customElements.define("snap-button",class extends HTMLElement{wrapper;backdrop;button;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/snap-button.css";\n\t\t</style>\n\t\t<div class="wrapper">\n\t\t\t<div class="backdrop"></div>\n\t\t\t<div class="button"></div>\n\t\t</div>\n\t\t'}connectedCallback(){this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&this.dispatch({action:"open"})})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&this.dispatch({action:"close"})})),this.backdrop=this.wrapper.querySelector(".backdrop"),this.button=this.wrapper.querySelector(".button"),this.button.addEventListener("click",(()=>{this.backdrop.classList.add("rotate")})),this.backdrop.addEventListener("animationend",(t=>{"rotate"==t.animationName&&(this.backdrop.classList.remove("rotate"),this.hide())}))}show(){this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("snap-button",{detail:t});console.log(s),window.dispatchEvent(s)}}),customElements.define("simple-button",class extends HTMLElement{wrapper;side;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/simple-button.css";\n\t\t</style>\n\t\t<button class="wrapper">\n\t\t</button>\n\t\t'}connectedCallback(){this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.side=this.getAttribute("side"),this.wrapper.classList.add(this.side),this.type=this.getAttribute("type"),this.wrapper.classList.add(this.type),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&this.dispatch({action:"open",type:this.type})})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&this.dispatch({action:"close",type:this.type})})),this.wrapper.addEventListener("click",(t=>{this.dispatch({action:"click",type:this.type})}))}show(){this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("simple-button",{detail:t});window.dispatchEvent(s)}}),customElements.define("simple-caption",class extends HTMLElement{wrapper;text;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/simple-caption.css";\n\t\t</style>\n\t\t<div class="wrapper">\n\t\t\t<div class="text"></div>\n\t\t</div>\n\t\t'}connectedCallback(){this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.text=this.shadowRoot.querySelector(".text"),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&this.dispatch({action:"open"})})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&this.dispatch({action:"close"})}))}setText(t){this.text.innerHTML=t}show(){this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("simple-caption",{detail:t});window.dispatchEvent(s)}}),customElements.define("device-buttons",class extends HTMLElement{wrapper;buttons;underText;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/device-buttons.css";\n\t\t</style>\n\t\t<div class="wrapper">\n\t\t</div>\n\t\t'}connectedCallback(){this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&this.dispatch({action:"open"})})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&this.dispatch({action:"close"})}))}createButtons(){this.wrapper.innerHTML="",this.buttons=this.getAttribute("buttons").split(" ");for(let t of this.buttons){const s=document.createElement("div");s.classList.add("button"),s.classList.add(t),this.wrapper.append(s),s.addEventListener("click",(()=>this.dispatch({action:t})));const e=document.createElement("div");e.classList.add("under-text"),e.innerHTML=t,s.append(e)}const t=document.createElement("div");t.classList.add("spacer"),this.wrapper.append(t)}show(){console.log("show"),this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("device-buttons",{detail:t});window.dispatchEvent(s)}}),customElements.define("loading-widget",class extends HTMLElement{wrapper;dots;animationDelay;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/loading-widget.css";\n\t\t</style>\n\t\t<div class="wrapper">\n\t\t\t<div class="dot"></div>\n\t\t\t<div class="dot"></div>\n\t\t\t<div class="dot"></div>\n\t\t\t<div class="dot"></div>\n\t\t\t<div class="dot"></div>\n\t\t</div>\n\t\t'}connectedCallback(){this.animationDelay=this.hasAttribute("time")?parseFloat(this.getAttribute("time")):.1,this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&(this.animateDots(!0),this.dispatch({action:"open"}))})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&(this.animateDots(!1),this.dispatch({action:"close"}))})),this.dots=this.wrapper.querySelectorAll("div");for(let[t,s]of this.dots.entries())s.style.animationDuration=2*this.dots.length*this.animationDelay+"s",s.style.animationDelay=t*this.animationDelay+"s"}animateDots(t){for(let s of this.dots)s.style.animationName=t?"hop":"none"}show(){this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("loading-widget",{detail:t});window.dispatchEvent(s)}}),customElements.define("simple-slider",class extends HTMLElement{wrapper;text;constructor(){super(),this.attachShadow({mode:"open"}).innerHTML='\n\t\t<style>\n\t\t\t@import "./styles/components/simple-slider.css";\n\t\t</style>\n\t\t<div class="wrapper">\n\t\t\t<div class="cursor"></div>\n\t\t</div>\n\t\t'}connectedCallback(){this.wrapper=this.shadowRoot.querySelector(".wrapper"),this.cursor=this.shadowRoot.querySelector(".cursor"),this.wrapper.addEventListener("animationend",(t=>{"slide-in"==t.animationName&&this.dispatch({action:"open"})})),this.wrapper.addEventListener("animationstart",(t=>{"slide-out"==t.animationName&&this.dispatch({action:"close"})}))}placeCursor(t){this.cursor.style.left=Math.floor(100*t)+"%"}show(){this.wrapper.classList.add("slide-in"),this.wrapper.classList.remove("slide-out")}hide(){this.wrapper.classList.add("slide-out"),this.wrapper.classList.remove("slide-in")}dispatch(t){const s=new CustomEvent("simple-slider",{detail:t});window.dispatchEvent(s)}})})();